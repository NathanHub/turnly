name: 🔋 Test Suites

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main

env:
  MONGO_DB: turnly_testing_db
  MONGO_USERNAME: root
  MONGO_PASSWORD: turnly

jobs:
  unit_and_integration:
    name: 🧩 Unit & Integration
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15]
        mongodb-version: [latest]

    services:
      mongo:
        image: mongo:${{ matrix.mongodb-version }}
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.MONGO_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.MONGO_PASSWORD }}
        options: >-
          --name mongo
          --hostname mongo
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 🏷️ Check out Git repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: .github/filters.yml

      - name: 🚀 Setup Node
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: 💊 Setting integration tests dependencies...
        uses: ./.github/actions/setup-mongodb
        with:
          mongo-username: ${{ env.MONGO_USERNAME }}
          mongo-password: ${{ env.MONGO_PASSWORD }}
          mongo-db: ${{ env.MONGO_DB }}

      - name: "🧪 Add-ons: run unit tests"
        if: steps.filter.outputs.addons == 'true'
        run: yarn devo addons test:unit

      - name: "🧪 Add-ons: run integration tests"
        if: steps.filter.outputs.addons == 'true'
        run: yarn devo addons test:integration

      - name: "🧪 Assistance Centers: run unit tests"
        if: steps.filter.outputs.assistance-centers == 'true'
        run: yarn devo assistance-centers test:unit

      - name: "🧪 Assistance Centers: run integration tests"
        if: steps.filter.outputs.assistance-centers == 'true'
        run: yarn devo assistance-centers test:integration

      - name: "🧪 Business Owners: run unit tests"
        if: steps.filter.outputs.business-owners == 'true'
        run: yarn devo business-owners test:unit

      - name: "🧪 Business Owners: run integration tests"
        if: steps.filter.outputs.business-owners == 'true'
        run: yarn devo business-owners test:integration

      - name: "🧪 Custom Fields: run unit tests"
        if: steps.filter.outputs.custom-fields == 'true'
        run: yarn devo custom-fields test:unit

      - name: "🧪 Custom Fields: run integration tests"
        if: steps.filter.outputs.custom-fields == 'true'
        run: yarn devo custom-fields test:integration

      - name: "🧪 Queuing System: run unit tests"
        if: steps.filter.outputs.queuing-system == 'true'
        run: yarn devo queuing-system test:unit

      - name: "🧪 Queuing System: run integration tests"
        if: steps.filter.outputs.queuing-system == 'true'
        run: yarn devo queuing-system test:integration

      - name: "🧪 Teams: run unit tests"
        if: steps.filter.outputs.teams == 'true'
        run: yarn devo teams test:unit

      - name: "🧪 Teams: run integration tests"
        if: steps.filter.outputs.teams == 'true'
        run: yarn devo teams test:integration

  e2e_and_benchmark:
    name: 🧩 E2E & Benchmark
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15]
        mongodb-version: [latest]

    steps:
      - name: 🏷️ Check out Git repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: 🕒 Please wait, the next step will take a few minutes...
        run: echo "..."

      - name: 🐳 Setup the environment
        uses: ./.github/actions/setup-docker-node
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🚀 Start all applications
        run: yarn devo start --verbose

      - name: 🏁 Wait for the infrastructure to get up
        uses: ./.github/actions/wait-for-infrastructure

      - name: "🧪 Add-ons: run e2e tests"
        if: steps.filter.outputs.addons == 'true'
        run: yarn devo addons test:e2e

      - name: "🧪 Add-ons: run benchmark tests"
        if: steps.filter.outputs.addons == 'true'
        run: yarn devo addons test:benchmark

      - name: "🧪 Assistance Centers: run e2e tests"
        if: steps.filter.outputs.assistance-centers == 'true'
        run: yarn devo assistance-centers test:e2e

      - name: "🧪 Assistance Centers: run benchmark tests"
        if: steps.filter.outputs.assistance-centers == 'true'
        run: yarn devo assistance-centers test:benchmark

      - name: "🧪 Business Owners: run e2e tests"
        if: steps.filter.outputs.business-owners == 'true'
        run: yarn devo business-owners test:e2e

      - name: "🧪 Business Owners: run benchmark tests"
        if: steps.filter.outputs.business-owners == 'true'
        run: yarn devo business-owners test:benchmark

      - name: "🧪 Custom Fields: run e2e tests"
        if: steps.filter.outputs.custom-fields == 'true'
        run: yarn devo custom-fields test:e2e

      - name: "🧪 Custom Fields: run benchmark tests"
        if: steps.filter.outputs.custom-fields == 'true'
        run: yarn devo custom-fields test:benchmark

      - name: "🧪 Queuing System: run e2e tests"
        if: steps.filter.outputs.queuing-system == 'true'
        run: yarn devo queuing-system test:e2e

      - name: "🧪 Queuing System: run benchmark tests"
        if: steps.filter.outputs.queuing-system == 'true'
        run: yarn devo queuing-system test:benchmark

      - name: "🧪 Teams: run e2e tests"
        if: steps.filter.outputs.teams == 'true'
        run: yarn devo teams test:e2e

      - name: "🧪 Teams: run benchmark tests"
        if: steps.filter.outputs.teams == 'true'
        run: yarn devo teams test:benchmark

      - name: 🔥 Teardown
        if: always()
        run: |
          yarn devo stop --verbose
          docker system prune -fa
